Run started:2024-04-11 07:28:47.466638

Test results:
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./sdgym/benchmark.py:7:0
6	import os
7	import pickle
8	import tracemalloc

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: ./sdgym/benchmark.py:122:4
121	    synthesizer = synthesizer_dict['synthesizer']
122	    assert issubclass(
123	        synthesizer, BaselineSynthesizer), '`synthesizer` must be a synthesizer class'
124	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: ./sdgym/benchmark.py:525:23
524	    # User data script to install the library
525	    user_data_script = f"""#!/bin/bash
526	    sudo apt update -y
527	    sudo apt install python3-pip -y
528	    echo "======== Install Dependencies ============"
529	    sudo pip3 install sdgym
530	    sudo pip3 install anyio
531	    pip3 list
532	    sudo apt install awscli -y
533	    aws configure set aws_access_key_id {credentials.access_key}
534	    aws configure set aws_secret_access_key {credentials.secret_key}
535	    aws configure set region {session.region_name}
536	    echo "======== Write Script ==========="
537	    sudo touch ~/sdgym_script.py
538	    echo "{script_content}" > ~/sdgym_script.py
539	    echo "======== Run Script ==========="
540	    sudo python3 ~/sdgym_script.py
541	    echo "======== Complete ==========="
542	    INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
543	    aws ec2 terminate-instances --instance-ids $INSTANCE_ID
544	    """
545	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./sdgym/utils.py:5:0
4	import os
5	import subprocess
6	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./sdgym/utils.py:129:17
128	        command = ['nvidia-smi', '--query-gpu=utilization.gpu', '--format=csv,noheader,nounits']
129	        output = subprocess.run(command, stdout=subprocess.PIPE)
130	        return len(output.stdout.decode().split())

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./sdgym/utils.py:145:17
144	        command = ['nvidia-smi', '--query-gpu=utilization.gpu', '--format=csv,noheader,nounits']
145	        output = subprocess.run(command, stdout=subprocess.PIPE)
146	        loads = np.array(output.stdout.decode().split()).astype(float)

--------------------------------------------------

Code scanned:
	Total lines of code: 2645
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 5
		Medium: 1
		High: 0
	Total issues (by confidence):
		Undefined: 0
		Low: 1
		Medium: 0
		High: 5
Files skipped (0):
